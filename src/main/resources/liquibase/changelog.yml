databaseChangeLog:
  - changeSet:
      id: 1
      author: Dmitry Ghoncharko
      changes:
        - sql:
            dbms: postgresql
            endDelimiter: ;
            splitStatements: true
            sql: |
              create table interview.question_type
              (
                  question_type_id   bigserial
                      primary key,
                  question_type_name varchar(1000) not null
                      unique,
                  date_created      timestamp default current_timestamp,
                  last_date_updated timestamp default current_timestamp,
                  is_deleted        boolean default false
              );

              alter table interview.question_type
                  owner to interview;

              create table interview.question
              (
                  question_id      bigserial
                      primary key,
                  question_body    varchar(5000) not null
                      unique,
                  question_type_id bigint        not null
                      constraint question_question_type_question_type_id_fk
                          references interview.question_type,
                  date_created    timestamp default current_timestamp,
                  last_date_updated timestamp default current_timestamp,
                  is_deleted        boolean default false
              );

              alter table interview.question
                  owner to interview;

              create table interview.answer
              (
                  answer_id      bigserial
                      primary key,
                  answer_body    varchar(3000) not null,
                  answer_correct boolean       not null,
                  question_id    bigint        not null
                      constraint answer_question_question_id_fk
                          references interview.question,
                  date_created    timestamp default current_timestamp,
                  last_date_updated timestamp default current_timestamp,
                  is_deleted        boolean default false
              );

              alter table interview.answer
                  owner to interview;
              
              create table interview._role
                           (
                               role_id   bigserial
                                   primary key,
                               role_name varchar(300) not null
                                   unique
                           );

                           alter table interview._role
                               owner to interview;

                           create table interview._user
                           (
                               user_id         bigserial
                                   primary key,
                               user_first_name varchar(1000) not null,
                               user_last_name  varchar(1000) not null,
                               user_patronymic varchar(1000) not null,
                               user_email      varchar(2000) not null
                                   unique,
                               user_password   varchar(5000) not null,
                               user_role_id    bigint        not null
                                   constraint _user__role_role_id_fk
                                       references interview._role,
                               is_banned       boolean       not null default false
                           );
              alter table interview._user
                              owner to interview;
              
              create table interview._token_blacklist
              (
                  token_id     bigserial primary key,
                  token_value  varchar(5000) not null,
                  expire_date  timestamp not null
              );

              create index idx_token_value on interview._token_blacklist (token_value);
              alter table interview._token_blacklist
                                           owner to interview;
              create table interview.question_group
              (
                  group_id   bigserial
                      primary key,
                  group_name varchar(1000) not null
                      unique,
                  date_created timestamp default CURRENT_TIMESTAMP,
                  last_date_updated timestamp default CURRENT_TIMESTAMP,
                  is_deleted boolean default false
              );

              alter table interview.question_group
                  owner to interview;
              create table interview.question_to_group
              (
                  question_id bigint
                      references interview.question,
                  group_id    bigint
                      references interview.question_group,
                  primary key (question_id, group_id)
              );

              alter table interview.question_to_group
                  owner to interview;
        - sqlFile:
            dbms: postgresql
            splitStatements: true
            endDelimiter: ;
            path: classpath:liquibase/insert/insert_data.sql
